---
- hosts: all

  vars:
    vhost_name: wp-site.local

  module_defaults:
    apt:
      force_apt_get: true

  become: true

  tasks:

    - name: Install misc tools
      apt:
        name:
          - unzip
        state: present

    # PHP
    - name: Add PHP PPA
      apt_repository: repo='ppa:ondrej/php'

    - name: Update the apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install PHP
      apt:
        name:
          - php7.3-fpm
          - php7.3-mysql
          - php7.3-xml
        state: present

    # MySQL
    - name: Install MySQL
      apt:
        name:
        - mysql-server-5.7
        - python3-mysqldb
        state: present

    - name: Start and enable MySQL
      service:
        name: mysql
        enabled: yes

    - name: Generate new root password
      command: openssl rand -base64 13 creates=/root/.my.cnf
      register: mysql_new_root_pass

    - name: Removes all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
      when: mysql_new_root_pass.changed

    - name: Update root password
      mysql_user:
        name=root
        host=localhost
        password={{mysql_new_root_pass.stdout}}
      when: mysql_new_root_pass.changed

    - name: Output new root password
      debug: msg="New MySQL root's password is {{mysql_new_root_pass.stdout}}"
      when: mysql_new_root_pass.changed

    - name: Create my.cnf
      template: src=templates/mysql/my.cnf dest=/root/.my.cnf
      when: mysql_new_root_pass.changed

    # nginx
    - name: Install nginx
      apt:
        name: nginx
        state: present

    - name: Create nginx config
      template:
        src: templates/nginx/wp-site
        dest: /etc/nginx/sites-available/wp-site
      notify: restart nginx

    - name: Enable vhost
      file:
        src: /etc/nginx/sites-available/wp-site
        dest: /etc/nginx/sites-enabled/wp-site
        state: link

    - name: Start and enable nginx
      service:
        name: nginx
        enabled: yes

    # WordPress
    - name: Copy wordpress.zip into tmp
      copy:
        src: files/wordpress.zip
        dest: /tmp/wordpress.zip

    - name: Unzip WordPress
      unarchive:
        src: /tmp/wordpress.zip
        dest: /tmp
        copy: no
        creates: /tmp/wordpress/wp-settings.php

    - name: Create project folder
      file: dest="/var/www/{{ vhost_name }}" state=directory

    - name: Copy WordPress files
      command: cp -a /tmp/wordpress/. /var/www/{{ vhost_name }} creates="/var/www/{{ vhost_name }}/wp-settings.php"

    - name: Create WordPress MySQL database
      mysql_db:
        name: wordpress
        state: present

    - name: Create WordPress MySQL user
      mysql_user:
        name: wordpress
        host: localhost
        password: Ahc2koosee8ae
        priv: wordpress.*:ALL

    - name: Create wp-config
      template:
        src: "templates/wordpress/wp-config.php"
        dest: "/var/www/{{ vhost_name }}/wp-config.php"

    - name: Change www dir owner
      file:
        path: "/var/www/{{ vhost_name }}"
        owner: www-data
        group: www-data
        recurse: yes

    - name: Does the database exist?
      command: mysql -u root wordpress -e "SELECT ID FROM wordpress.wp_users LIMIT 1;"
      register: db_exist
      ignore_errors: true
      changed_when: false

    - name: Copy WordPress DB
      copy: src=files/wp-database.sql dest=/tmp/wp-database.sql
      when: db_exist.rc > 0

    - name: Change domain
      replace:
        path: /tmp/wp-database.sql
        regexp: 'wp-site\.local'
        replace: "{{ vhost_name }}"
      when: db_exist.rc > 0

    - name: Import WordPress DB
      mysql_db: target=/tmp/wp-database.sql state=import name=wordpress
      when: db_exist.rc > 0

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted




